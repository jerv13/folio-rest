/*! folio-rest-html 2015-12-13 */

"use strict";angular.module("jfolio.alert",["jfolio.exception"]).factory("Alerts",["Exception",function(Exception){var Alerts=function(scope){var self=this;self.displayTime=4e3,self.alerts=[],self.thrown=[],self.timeout,self.buildException=function(exception,alertType){return"object"!=typeof exception&&(exception=new Exception),"string"!=typeof alertType&&(alertType="info"),exception.type=alertType,exception},self.thrwNew=function(exception,type){self.clearThrown(),self.thrown.push(self.buildException(exception,type)),self.setThrownTimout()},self.add=function(exception,type){self.alerts.push(self.buildException(exception,type))},self.thrw=function(){self.thrown=self.alerts,self.setThrownTimout(self.clearAlerts)},self.setThrownTimout=function(onClear){self.displayTime>0&&(self.timeout&&clearTimeout(self.timeout),self.timeout=window.setTimeout(function(){scope.$apply(function(){self.clearThrown(),"function"==typeof onClear&&onClear()})},self.displayTime))},self.clearThrown=function(){console.log("clearThrown"),self.thrown=[]},self.clearAlerts=function(){console.log("clearAlerts"),self.alerts=[]},self.clearAll=function(){console.log("clearAll"),self.timeout&&clearTimeout(self.timeout),self.clearThrown(),self.clearAlerts()}};return Alerts}]).directive("alertsInclude",["resumeDataService",function(resumeDataService){return{restrict:"A",template:'<div class="alerts" ng-show="alerts.thrown.length > 0"><div ng-repeat="alert in alerts.thrown"><div class="alert {{alert.type}} number_{{alert.code}}"><div class="icon"><i class="fa fa-exclamation-triangle fa-2x"></i></div><div class="code">{{alert.code}}: </div><div class="message">{{alert.message}}</div><div></div></div></div></div>',scope:{alerts:"="},link:function(scope,element,attrs,ngModel){console.log("Include module.res1")}}}]),angular.module("jfolio.config",[]).factory("coreConfig",[function(){}]).factory("httpConfig",[function(){var HttpConfig=function(){var self=this;self.url={scheme:"",hostname:"",port:"",basepath:"api"},self.setUrl=function(url){"object"==typeof url&&(self.url=url)},self.getFullUrl=function(filepath){var url=(self.url.scheme.length>0?self.url.scheme+"://":"")+(self.url.hostname.length>0?self.url.hostname:"")+(self.url.port.length>0?":"+self.url.port:"")+(self.url.basepath.length>0?"/"+self.url.basepath:"")+("string"==typeof filepath?filepath:"");return console.log("Full Url: "+url),url}},httpConfig=new HttpConfig;return"undefined"!=typeof jfolioServerConfig&&jfolioServerConfig.httpConfig&&jfolioServerConfig.httpConfig.url?httpConfig.setUrl(jfolioServerConfig.httpConfig.url):console.log("Server config not available, using default"),httpConfig}]),angular.module("jfolio.core",[]).directive("contenteditable",function($sce){return{restrict:"A",require:"ngModel",link:function(scope,elm,attrs,ctrl){elm.on("blur",function(){var html=elm.html();scope.$apply(function(){ctrl.$setViewValue(html)})}),ctrl.$render=function(){var html=$sce.trustAsHtml(ctrl.$viewValue);elm.html(html)}}}}).filter("unsafe",function($sce){return function(val){return $sce.trustAsHtml(val)}}),angular.module("jfolio.exception",[]).factory("Exception",function(){var Exception=function(){var self=this;self.code=500,self.message="Unknown Exception"};return Exception}),angular.module("jfolio.http",["jfolio.config"]).factory("coreHttp",["$http","httpConfig",function($http,httpConfig){var CoreHttp=function(){var self=this;self.loading=!1,self.defaultHeaders={},self.defaultMessage="An unknown error has occurred.",self.invalidDataMessage="Server data was not return in a valid format.",self.comErrorMessage="There was an error talking to the server.",self.buildHeaders=function(headers){return"undefined"==typeof headers?self.defaultHeaders:headers},self.buildUrl=function(filepath){return httpConfig.getFullUrl(filepath)},self.get=function(url,data,onSuccess,onFail,headers){self.loading=!0;var config={method:"GET",url:url,params:data,headers:self.buildHeaders(headers)};self.execute(config,onSuccess,onFail)},self.post=function(url,data,onSuccess,onFail,headers){},self.put=function(url,data,onSuccess,onFail,headers){},self.del=function(url,data,onSuccess,onFail,headers){},self.execute=function(config,onSuccess,onFail){self.loading=!0,config.headers=self.buildHeaders(config.headers),$http(config).success(function(data,status,headers,config){return console.log("CoreHttp.success",data),"object"!=typeof data?("function"==typeof onFail&&onFail({code:500,message:self.invalidDataMessage}),void(self.loading=!1)):200!==status?(("object"!=typeof data||null===data)&&(data={}),data.error||(data.error={status:status,message:self.defaultMessage}),"function"==typeof onFail&&onFail({code:data.error.status,message:data.error.message}),void(self.loading=!1)):("function"==typeof onSuccess&&onSuccess(data,config),void(self.loading=!1))}).error(function(data,status,headers,config){console.log("CoreHttp.error"),console.log(data),console.log(status),"function"==typeof onFail&&onFail({code:status,message:self.comErrorMessage}),self.loading=!1})}};return new CoreHttp}]).factory("CoreHttpService",["coreHttp",function(coreHttp){var CoreHttpService=function(url,reqData,onSuccess,onFail){var self=this;self.url=null,self.reqData=null,self.onInitComplete=null,self.onExecuteStart=null,self.onSuccess=null,self.onFail=null,self.loading=!0,self.data=null,self.exception=null,self.init=function(url,reqData,onSuccess,onFail){self.url=coreHttp.buildUrl(url),self.reqData=reqData,self.onSuccess=onSuccess,self.onFail=onFail,"function"==typeof self.onInitComplete&&self.onInitComplete(self)},self.execute=function(){console.log("CoreHttpService.execute"),"function"==typeof self.onExecuteStart&&self.onExecuteStart(self),self.loading=!0;var onSuccess=function(data,config){console.log("CoreHttpService.onSuccess"),"function"==typeof self.onSuccess&&self.onSuccess(data,config),self.data=data,self.loading=!1},onFail=function(exception){console.log("CoreHttpService.onFail"),"function"==typeof self.onFail&&self.onFail(exception),self.exception=exception,self.loading=!1};coreHttp.get(self.url,self.reqData,onSuccess,onFail)},self.init(url,reqData,onSuccess,onFail)};return CoreHttpService}]);
//# sourceMappingURL=scripts.min.js.map